@using WarehouseApp.Models
@model WarehouseApp.Models.ViewModels.PuchaseViewModel

@{
    ViewBag.Title = "New Purchase";
    var today = DateTime.Now;
}
@section Styles{
    @Styles.Render("~/Content/jquery-ui")
}
<div class="submit-progress hidden">
    <i class="fa fa-2x fa-spinner fa-spin"></i>
    <label>Please wait ...</label>
</div>
@using (Html.BeginForm("SavePurchase", "Purchase", null, FormMethod.Post, new { @id = "createPurchaseForm" }))
{
    @Html.AntiForgeryToken()
    <div class="row">
        <div class="col-md-12 col-xs-12">
            <div class="x_panel">
                <div class="x_title">
                    <h2><i class="fa fa-pencil"></i> New Purchase</h2>
                    <ul class="nav navbar-right panel_toolbox">

                        <li class="dropdown">
                            <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-expanded="false" title="Settings"><i class="fa fa-wrench"></i></a>
                            <ul class="dropdown-menu" role="menu">
                                <li>
                                    <a href='@Url.Action("Index","Supplier")'>All Suppliers</a>
                                </li>
                                <li>
                                    <a href='@Url.Action("Index","WarehouseZone")'>Warehouse Zone</a>
                                </li>
                            </ul>
                        </li>
                        <li>
                            <a class="collapse-link" title="Collapse"><i class="fa fa-chevron-up"></i></a>
                        </li>
                    </ul>
                    <div class="clearfix"></div>
                </div>
                <div class="x_content">
                    @Html.ValidationSummary(true)
                    <div class="col-md-3 paddingReduce">
                        <div class="panel panel-default">
                            <div class="panel-heading">
                                <h3 class="panel-title">Item Search</h3>
                            </div>
                            <div class="panel-body">
                                <div class="form-horizontal">
                                    <div class="form-group">
                                        @Html.TextBox("ProductBarCode", null, new { @class = "form-control", placeholder = "Scan Bar Code"@*@style="background-color: rgb(255, 215, 215)",@style = "background-color: rgb(191, 255, 191);"*@ })

                                        @Html.TextBox("ProductName", null, new { @class = "form-control", placeholder = "Product Name" })

                                        @Html.TextBox("ProductCode", null, new { @class = "form-control", placeholder = "Product Code" })
                                    </div>
                                    @*<input type="button" id="checkBarcode" value="check">*@
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-7 paddingReduce">
                        <div class="panel panel-default">
                            <table class="table table-striped table-condensed jambo_table bulk_action" id="productTable">
                                <thead style="background-color:#f5f5f5 ;color:black;">
                                    <tr class="panel-heading">
                                        <th>Item</th>
                                        <th>Price</th>
                                        <th>Quantity</th>
                                        <th>Total</th>
                                        <th>Warehouse</th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @*<tr>
                                            <td class="col-md-5 paddingReduce">
                                                @Html.Hidden("ProductId", 1,new{@class="productId-1"})
                                                @Html.Hidden("ProductDiscount", 5)
                                                @Html.Hidden("ProductDiscountType", "Flat")
                                                @Html.Hidden("Vat", 15)

                                                EMPORIO ARMANI 9852 138 [DD]
                                            </td>
                                            <td class="col-md-2 paddingReduce">@Html.TextBox("Price", null, new { @class = "form-control input-sm ", @Value = 500 })</td>

                                            <td class="col-md-2 paddingReduce">
                                                <div class="col-md-12 paddingReduce input-group ">
                                                    @Html.TextBox("Quanity", null, new { @class = "form-control input-sm", @Value = 1 })
                                                    <span class="input-group-addon productUnit">Pcs</span>
                                                </div>
                                            </td>
                                            <td class="col-md-2 paddingReduce">@Html.TextBox("TotalProductPrice", null, new { @class = "form-control input-sm ", @Value = 500, @disabled = true })</td>
                                            <td class="col-md-1 paddingReduce"><span class="btn btn-xs btn-danger remove"><i class="fa fa-times"></i></span></td>
                                        </tr> *@
                                </tbody>
                                <tfoot>
                                    <tr>
                                        <td colspan="5" style="text-align:center; font:bold 20px bold;color:black;">Total: <span id="footerTotal">0</span></td>
                                    </tr>
                                </tfoot>
                            </table>

                        </div>
                    </div>
                    <div class="col-md-2 paddingReduce">
                        <div class="panel panel-default">
                            <div class="panel-heading">
                                <h3 class="panel-title">Purchase</h3>
                            </div>
                            <div class="panel-body">
                                <div class="row form-group">

                                    <div class="col-md-12 paddingReduce">
                                        @Html.LabelFor(model => model.PurchaseDate, "Date", new { @class = "required-label control-label col-md-12 salesLabel" })
                                        <div class="col-md-12 paddingReduce input-group " style="padding-left:5px">
                                            @Html.TextBox("PurchaseDate", string.Format("{0:dd-MM-yyyy}", DateTime.Now), new { @class = "form-control rfwDatepicker", @Value = string.Format("{0:dd-MM-yyyy}", DateTime.Now) })
                                            <span class="input-group-addon rfwDatepickerIcon"><i class="glyphicon glyphicon-calendar"></i></span>
                                        </div>
                                    </div>
                                    <div class="col-md-12 paddingReduce">
                                        @Html.LabelFor(model => model.TotalPurchasePrice, new { @class = "required-label control-label col-md-12 salesLabel" })
                                        @Html.TextBoxFor(model => model.TotalPurchasePrice, new { @class = "form-control", @style = "font-weight:bold;color:Black;font-size:15px;text-align:center;", @readonly = true, })
                                    </div>  <div class="col-md-12 paddingReduce">
                                        @Html.LabelFor(model => model.PurchaseDiscount, "Discount", new { @class = " control-label col-md-12 salesLabel" })

                                        @Html.TextBoxFor(model => model.PurchaseDiscount, new { @class = "form-control", @Value = 0 })


                                        @*<div class="col-md-12 paddingReduce">
                                                <div class="radio radio-inline" style="padding-left: 15px;">

                                                    <label>
                                                        <input type="radio" name="DiscountType" checked value="Flat">Flat
                                                    </label>
                                                </div>
                                                <div class="radio radio-inline" style="padding-left: 5px;">
                                                    <label> <input type="radio" name="DiscountType" value="Percent">Percent</label>
                                                </div>
                                            </div>*@
                                    </div>   <div class="col-md-12 paddingReduce">
                                        @Html.Label("Grand Total", new { @class = "required-label control-label col-md-12 salesLabel" })
                                        @Html.TextBox("grandTotal", null, new { @class = "form-control", @style = "font-weight:bold;color:Black;font-size:15px;text-align:center;", @readonly = true, })
                                    </div>  <div class="col-md-12 paddingReduce">
                                        @Html.LabelFor(model => model.TransactionMode, new { @class = "required-label control-label col-md-12 salesLabel" })
                                        @Html.DropDownList("TransactionMode", null, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.TransactionMode)
                                    </div>  <div class="col-md-12 paddingReduce hidden" id="transactionAccountId">
                                        @Html.LabelFor(model => model.TransactionModeId, "Account", new { @class = "required-label control-label col-md-12 salesLabel" })
                                        @Html.DropDownList("TransactionModeId", null, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.TransactionModeId)
                                    </div> <div class="col-md-12 paddingReduce">
                                        @Html.LabelFor(model => model.SupplierId, "Supplier", new { @class = "control-label col-md-8 salesLabel" })
                                        <div class="col-md-4"> <span class="btn btn-xs btn-primary" id="newSupplierAddButton"><i class="fa fa-plus"></i></span></div>
                                        @Html.DropDownList("SupplierId", null, "--Select--", new { @class = "form-control" })
                                    </div>
                                    <div class="col-md-12 paddingReduce">
                                        @Html.LabelFor(model => model.PaidAmount, new { @class = " control-label col-md-12 salesLabel" })
                                        @Html.TextBoxFor(model => model.PaidAmount, new { @class = "form-control", @Value = 0 })
                                    </div><div class="col-md-12 paddingReduce">

                                        @Html.LabelFor(model => model.PaidAmount,"Due", new { @class = " control-label col-md-12 salesLabel" })
                                        @Html.TextBox("DueAmount", null, new { @class = "form-control", @readonly = true, @Value = 0 })
                                    </div>
                                    <div class="col-md-12 paddingReduce">
                                        @Html.LabelFor(model => model.PurchaseCost, new { @class = " control-label col-md-12 salesLabel" })
                                        @Html.TextBoxFor(model => model.PurchaseCost, new { @class = "form-control", @Value = 0 })

                                    </div>

                                </div>

                                <div class="row form-group">
                                    @Html.HiddenFor(model=>model.FormSubmitType,1)
                                    <button type="button" class="btn btn-block btn-primary" title="Save Purchase" id="savePurchase"><i class="fa fa-save"></i> Save Purchase</button>
                                </div>

                                <div class="row form-group">
                                    <a href='@Url.Action("NewPurchase","Purchase")' data-toggle="tooltip" title="Reset" id="reset" class="btn btn-block  btn-default" data-original-title="Reset"><i class="fa fa-refresh"></i> Reset</a>
                                </div>
                                <div class="row form-group">
                                    <a href='@Url.Action("Index","Purchase")' data-toggle="tooltip" title="Cancel" id="cancel" class="btn btn-block  btn-danger" data-original-title="Cancel"><i class="fa fa-reply"></i> Cancel</a>
                                </div>


                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div></div>

        }
        <div class="modal" id="supplierAddModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel">
            <div class="modal-dialog modal-sm" role="document">

                <div class="modal-content">

                    @{ var newSupplier = new Supplier();}
                    @Html.Partial("../Shop/Supplier/_SaveSupplierModalPartial", newSupplier)
                </div>
            </div>
        </div>
        @section Scripts {
            @Scripts.Render("~/bundles/jquery-ui")
            @Scripts.Render("~/bundles/jqueryval")
            @Scripts.Render("~/bundles/ShopScript")
            @Scripts.Render("~/bundles/PurchaseScript")
@Scripts.Render("~/bundles/barcode-scanner-detection")
            <script>

                $(document).ready(function () {
                    $('#addProduct').on('click', function () {
                        purchaseAddProduct();
                    });
                    $('#ProductBarCode').scannerDetection({
                        timeBeforeScanTest: 200, // wait for the next character for upto 200ms
                        startChar: [120], // Prefix character for the cabled scanner (OPL6845R)
                        endChar: [13], // be sure the scan is complete if key 13 (enter) is detected
                        avgTimeByChar: 40, // it's not a barcode if a character takes longer than 40ms
                        onComplete: function (barcode, qty) {

                            barcodeSearch(barcode);
                            $(this).val('');
                            //return false;
                        } // main callback function
                    });
                    $('#ProductName').focus(function () {
                        var url = '@Url.Action("GetProuctForPurchase", "Product")';
                        AutoCompleteProductName('#ProductName', url);
                    });
                    $('#ProductCode').focus(function () {
                        var url = '@Url.Action("GetProuctbyCodeForPurchase", "Product")';
                        AutoCompleteProductName('#ProductCode', url);
                    });
                    $('#TransactionMode').change(function () {
                        $('#TransactionModeId').empty();
                        var value = $(this).val();
                        if (value == "Cash") {
                            $('#transactionAccountId').addClass('hidden');
                        }
                        else {
                            $('#transactionAccountId').removeClass('hidden');
                        }

                        var paramData = { TransactionMode: value };
                        var url = '@Url.Action("GetAccountByMode", "BankAccount")';
                        getDataShop(url, paramData, 'getAccountNo');
                    });
                    $('#PcTransactionMode').change(function () {
                        $('#PcTransactionModeId').empty();
                        var value = $(this).val();

                        var paramData = { TransactionMode: value };
                        var url = '@Url.Action("GetAccountByMode", "BankAccount")';
                        getDataShop(url, paramData, 'getAccountNoForPurchaseCost');
                    });

                    $('#Product').focus(function () {
                        var url = '@Url.Action("GetProuctForPurchase", "Product")';
                        AutoCompleteProductName('#Product', url);

                    });


                    $('#TotalQuantity').on('keyup', function () {
                        totalPriceProduct();
                    });


                    $('#UnitPrice').on('keyup', function () {
                        totalPriceProduct();
                    });
                    $('#PurchaseDiscount').on('keyup', function () {
                        CalculatePurchaseGrandTotal();
                        //purchaseDiscountChangeEffect();
                    });

                    $('#PurchaseCost').on('keyup', function () {
                        CalculatePurchaseGrandTotal();
                        // purchaseCostChangeEffect();
                    });
                    $('#PaidPurchaseCost').on('keyup', function () {
                        paidPurchaseCostChangeEffect();
                    });

                    $('#PaidAmount').on('keyup', function () {
                        paidAmountChangeEffect();
                    });
                    $('#newSupplierAddButton').click(function () {
                        $('#supplierAddModal').modal('show');

                    });
                    $('#newSupplierModalFormSubmit').click(function () {
                        if ($('#newSupplierModalForm').valid()) {
                            var formData = objectifyForm($("#newSupplierModalForm").serializeArray());

                            var url = '@Url.Action("AddNewSupplier", "Supplier")';
                            var paramData = { supplier: formData };

                            postShopData(url, paramData, "renderNewSupplierAddedToPurchase");
                        } else {
                            return false;
                        }
                    });
                    $('#savePurchase').on('click', function () {
                        submitPurchaseForm();

                    });
                    $('#checkBarcode').on('click', function () {
                        var barCode = $('#ProductBarCode').val();
                        //console.log(barCode);
                        barcodeSearch(barCode);

                    });
                });
                function barcodeSearch(barcode) {
                    var url = '@Url.Action("GetProuctByBarcode", "Product")';
                    var paramData = { barCode: barcode };
                    getDataShop(url, paramData, 'renderBarcodeSearchForPurchase');
                }




                function submitPurchaseForm() {
                    var count = 0;
                    $('#productTable tbody').find('tr').each(function () {
                        var suffix = $(this).find(':input:first').attr('name').match(/\d+/);
                        $.each($(this).find(':input'), function (i, val) {
                            // Replaced Name
                            var oldN = $(this).attr('name');
                            var newN = oldN.replace('[' + suffix + ']', '[' + count + ']');
                            $(this).attr('name', newN);

                        });

                        count++;
                    });
                    var PurchaseDate = $('#PurchaseDate').val();
                    var TransactionModeId = $('#TransactionModeId option:selected').val();
                    if (PurchaseDate == '' || count == 0 || TransactionModeId == '') {
                        $.alert("Please enter required field value", '<i class="fa fa-exclamation-circle" aria-hidden="true"> Alert</i>');
                    } else {

                        $.confirm({
                            title: '<i class="fa fa-exclamation-circle"></i> Confirmation',
                            content: 'Are you sure want save new purchase? ',
                            confirmButton: "Yes",
                            cancelButton: "No",
                            confirm: function () {

                                DisplayProgressMessage('#savePurchase', 'Saving..');
                                $('#reset').prop("disabled", true);
                                $('#cancel').prop("disabled", true);
                                // SavePurchaseProduct(url, paramData, 'saveInvoice');
                                $('#createPurchaseForm').submit();
                            },
                            cancel: function () {

                            }
                        });

                    }

                }


            </script>
        }
        @*//=======================================================================================//
            //Author : Md. Mahid Choudhury
            //Creation Date : January 2017
            //=======================================================================================//*@
