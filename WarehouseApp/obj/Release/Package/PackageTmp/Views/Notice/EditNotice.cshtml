@model WarehouseApp.Models.Notice

@{
    ViewBag.Title = "Edit Notice";
}

@using (Html.BeginForm("EditNotice", "Notice", null, FormMethod.Post, new { @id = "createCategoryForm" })) 
{
    @Html.AntiForgeryToken()
    <div class="row">
		<div class="col-md-10 col-xs-12">
            <div class="x_panel">
                <div class="x_title">
                    <h2><i class="fa fa-pencil"></i> Edit Notice</h2>
                    <ul class="nav navbar-right panel_toolbox">

                        <li class="dropdown">
                            <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-expanded="false" title="Settings"><i class="fa fa-wrench"></i></a>
                            <ul class="dropdown-menu" role="menu">
                                <li>
                                    <a href='@Url.Action("Index","Customer")'>Customers</a>
                                </li>
                                <li>
                                    <a href='@Url.Action("Index","WarehouseZone")'>Product Transfer</a>
                                </li>
                            </ul>
                        </li>
                        <li>
                            <a class="collapse-link" title="Collapse"><i class="fa fa-chevron-up"></i></a>
                        </li>
                    </ul>
                    <div class="clearfix"></div>
                </div>
                <div class="x_content">
                    @Html.ValidationSummary(true)
                    @Html.HiddenFor(model=>model.NoticeId)
                    <form role="form">
                        <div class="col-xs-12 col-sm-12 col-md-12">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Heading, new { @class = "control-label" })
                                @Html.TextBoxFor(model => model.Heading, new { @class = "form-control", placeholder = "Heading" })
                                @Html.ValidationMessageFor(model => model.Heading)

                            </div>    
                            
                           <div class="form-group">
                                @Html.LabelFor(model => model.Description, new { @class = "control-label" })                                
                               @Html.TextAreaFor(model => model.Description, new { @class = "form-control", placeholder = "Description", rows=15 })
                                @Html.ValidationMessageFor(model => model.Description)
                               
                            </div>                       
                            <div class="form-group">
                                @Html.LabelFor(model => model.Status, new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    <div class="radio radio-inline">
                                        <label>@Html.RadioButtonFor(model => model.Status, "1", new { @checked = true, @class = "" }) Enabled</label>
                                    </div>
                                    <div class="radio radio-inline">
                                        <label>@Html.RadioButtonFor(model => model.Status, "0", new { @class = "" }) Disabled</label>
                                    </div>

                                    @Html.ValidationMessageFor(model => model.Status)
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <input type="submit" value="Update" class="btn btn-info" />
                                    &nbsp;&nbsp;@Html.ActionLink("Cancel", "Index", "Notice", null, new { @class = "btn btn-default" })

                                </div>

                            </div>
                        </div>

                    </form>
                </div>
            </div>
        </div>
    </div>
    
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
@Scripts.Render("~/bundles/chosen")
<script>
    //chosen-select =========================================================
    var config = {
        '.chosen-select': {},
        '.chosen-select-deselect': { allow_single_deselect: true },
        '.chosen-select-no-single': { disable_search_threshold: 10 },
        '.chosen-select-no-results': { no_results_text: 'Oops, nothing found!' },
        '.chosen-select-width': { width: "95%" }
    };
    for (var selector in config) {
        $(selector).chosen(config[selector]);
    }
</script>

}
@*//=======================================================================================//
    //Author : Md. Mahid Choudhury
    //Creation Date : January 2017
    //=======================================================================================//*@