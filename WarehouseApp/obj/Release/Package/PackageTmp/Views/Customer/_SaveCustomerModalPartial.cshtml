@model WarehouseApp.Models.Customer

@using (Html.BeginForm("AddNewCustomer", "Customer", null, FormMethod.Post, new { @id = "newCustomerModalForm" }))
{
    @Html.AntiForgeryToken()
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <h4 class="modal-title" id="exampleModalLabel">New Customer</h4>
    </div>
    <div class="modal-body">
  
            @Html.ValidationSummary(true)
            <div class="form-group">
                @Html.LabelFor(model => model.FullName, new { @class = "control-label" })
                @Html.TextBoxFor(model => model.FullName, new { @class = "form-control input-sm" })
                @Html.ValidationMessageFor(model => model.FullName)

            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ContactNo, new { @class = "control-label" })
                @Html.TextBoxFor(model => model.ContactNo, new { @class = "form-control input-sm" })
                @Html.ValidationMessageFor(model => model.ContactNo)

            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Email, new { @class = "control-label" })
                @Html.TextBoxFor(model => model.Email, new { @class = "form-control input-sm" })
                @Html.ValidationMessageFor(model => model.Email)
            </div><div class="form-group">
                @Html.LabelFor(model => model.Address, new { @class = "control-label" })
                @Html.TextAreaFor(model => model.Email, new { @class = "form-control input-sm" })
                @Html.ValidationMessageFor(model => model.Email)
            </div>
        </div>

    <div class="modal-footer">
        <input type="button" id="newCustomerModalFormSubmit" class="btn btn-primary" value="Save" />
        <button data-dismiss="modal" class="btn btn-danger">Cancel</button>

    </div>
}

@*@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}*@
