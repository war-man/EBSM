@using System.IdentityModel.Configuration
@using Microsoft.AspNet.Identity
@using WarehouseApp.Models
@model WarehouseApp.Models.User


@{
    ViewBag.Title = "User Profile Edit";
}
@using (Html.BeginForm("UserProfileEdit", "User", FormMethod.Post, new { @id = "ProfileEditForm" }))
{
    @Html.AntiForgeryToken()
    <div class="row">
        <div class="col-md-12 col-sm-12 col-xs-12">
            <div class="x_panel">
                <div class="x_title">
                    <i class="fa fa-pencil"></i> User Profile Edit
                    <ul class="nav navbar-right panel_toolbox">
                       

                        <li class="dropdown">
                            <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" title="Settings" aria-expanded="false"><i class="fa fa-wrench"></i></a>
                            <ul class="dropdown-menu" role="menu">
                                @{if (Model.UserId == Convert.ToInt32(User.Identity.GetUserName().Split('|')[0]))
                                {
                                     <li><a href='@Url.Action("ChangePassword","User")'><i class="fa fa-key"></i> Change Password</a></li>
                                }
                                else if (User.IsInRole("Global_SupAdmin"))
                                    {
                                        <li><a href='@Url.Action("ResetPassword","User", new { id = Model.UserId })'><i class="fa fa-key"></i> Reset Password</a></li>
                                    }}
                               
                            </ul>
                        </li>
                        <li>
                            <a class="collapse-link" title="Collapse"><i class="fa fa-chevron-up"></i></a>
                        </li>
                    </ul>
                    <div class="clearfix"></div>
                </div>
                <div class="x_content">
                
                                @Html.ValidationSummary(true)
                                @Html.HiddenFor(u=>u.UserId)
                                <div class="col-xs-6 col-sm-6 col-md-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.FullName, new { @class = "control-label" })
                                        @Html.TextBoxFor(model => model.FullName, new { @class = "form-control input-sm", placeholder = "Full Name" })
                                        @Html.ValidationMessageFor(model => model.FullName)

                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Address, new { @class = "control-label" })
                                        @Html.TextAreaFor(model => model.Address, new { @class = "form-control input-sm", placeholder = "Address" })
                                        @Html.ValidationMessageFor(model => model.Address)
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Email, new { @class = "control-label" })
                                        @Html.TextBoxFor(model => model.Email, new { @class = "form-control input-sm", placeholder = "Email" })
                                        @Html.ValidationMessageFor(model => model.Email)
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.ContactNo, new { @class = "control-label" })
                                        @Html.TextBoxFor(model => model.ContactNo, new { @class = "form-control input-sm", placeholder = "Contact No" })
                                        @Html.ValidationMessageFor(model => model.ContactNo)
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Gender, new { @class = "control-label" })
                                        <div class="col-md-12">
                                            <div class="radio radio-inline">
                                                <label>@Html.RadioButtonFor(model => model.Gender, "Male", new { @checked = true, @class = "radio-inline gender" }) Male</label>
                                            </div>
                                            <div class="radio radio-inline">
                                                <label>@Html.RadioButtonFor(model => model.Gender, "Female", new { @class = "radio-inline gender" }) Female</label>

                                            </div>
                                        </div>
                                        @Html.ValidationMessageFor(model => model.Gender)
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.NationalId, new { @class = "control-label" })
                                        @Html.TextBoxFor(model => model.NationalId, new { @class = "form-control input-sm", placeholder = "National ID" })
                                        @Html.ValidationMessageFor(model => model.NationalId)
                                    </div>
                                </div>
                    <div class="col-xs-6 col-sm-6 col-md-6">
                      
                        @if ((User.IsInRole("Global_SupAdmin") || User.IsInRole("User_Creation")) && (Model.UserId != Convert.ToInt32(User.Identity.GetUserName().Split('|')[0])))
                        {
                            <div class="form-group">
                                @Html.LabelFor(model => model.RoleId, "Role", new {@class = "control-label required-label"})
                                @*<select name="RoleId" id="RoleId" class="form-control input-sm">
                                                    <option value="">--Select--</option>
                                                </select>*@
                                @Html.DropDownList("RoleId", null, "--Select--", new {@class = "form-control input-sm"})
                                @Html.ValidationMessageFor(model => model.RoleId)
                            </div>
                        }
                        else
                        {
                            @Html.HiddenFor(model=>model.RoleId)
                        }


                    </div>
                                <div class="form-group">
                                    <div class="col-md-offset-2 col-md-10">
                                        <input type="submit" value="Save" class="btn btn-info" />
                                        @*<input type="submit" value="Save & Print" class="btn btn-info btn-block">*@
                                        &nbsp;&nbsp;@Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-default" })
                                    </div>
                                </div>
                            </div>


                        </div>
                    </div>
                </div> 


                }
                @section Scripts {
                    @Scripts.Render("~/bundles/jqueryval")
                    @Scripts.Render("~/bundles/Aquarium/AquariumScript")
                    <script>
                        $(document).ready(function () {
                            //$('input[name="DiscountType"]').change(function () {
                            //    calculateDiscount();
                            //});
                            $("#DepartmentId").change(function () {

                                var departmentId = $("#DepartmentId").val();

                                var paramData = { departmentId: departmentId };
                                var url = '@Url.Action("GetRoleByDepartmentId", "User")';

                                getData(url, paramData, 'renderRoleDropdown');
                            });
                        });

                    </script>
                }
