@model WarehouseApp.Models.ViewModels.TransactionSearchViewModel
@using PagedList.Mvc
@using WarehouseApp.Controllers

@{
    ViewBag.Title = "Transaction List";

}
@Styles.Render("~/Content/PagedList")
<div class="row panel panel-primary">

        <div class="panel-heading">
            
           <i class="fa fa-list"></i> Transaction List
           </div>
    <div class="panel-body">
        <div class="form-horizontal">

            <div class="form-group">
                @using (Html.BeginForm("Index", "Transaction", FormMethod.Post, new { @class = "", @id = "transactionSearchForm" }))
                {
                    <div class="col-lg-1">
                        @Html.Label(" ", new { @class = "col-lg-4 pageSizeLabel" })
                        <div class="col-lg-8">
                            @Html.DropDownListFor(model => model.PageSize, new SelectList(new Dictionary<string, int> { { "50", 50 },  { "100", 100 }, { "500", 500 }}, "Key", "Value", null), null, new { @class = "pageSizeDropdown", id = "pagesizelist" })

                        </div>
                    </div>
                    <div class="col-lg-4 form-inline">
                        <div class="col-md-5 input-group " style="">
                            @Html.TextBoxFor(model => model.TransactionDateFrom, string.Format("{0:dd-MM-yyyy}", DateTime.Now), new { @class = "form-control input-sm rfwDatepicker", })
                            <span class="input-group-addon rfwDatepickerIcon"><i class="glyphicon glyphicon-calendar"></i></span>
                        </div>
                        <i class="fa fa-minus fa-fw"></i>
                        <div class="col-md-5 input-group " style="">
                            @Html.TextBoxFor(model => model.TransactionDateTo, string.Format("{0:dd-MM-yyyy}", DateTime.Now), new { @class = "form-control input-sm rfwDatepicker", })
                            <span class="input-group-addon rfwDatepickerIcon"><i class="glyphicon glyphicon-calendar"></i></span>
                        </div>

                    </div>

                    <div class="col-lg-2">
                        
                        @Html.DropDownListFor(model => model.TransactionType, new SelectList(new List<SelectListItem>
        {
            new SelectListItem {Text = "Deposit", Value = "deposit"},
            new SelectListItem {Text = "Withdraw", Value = "withdraw"},
        }, "Value", "Text", null), "Select..", new { @class = "form-control input-sm" })


                    </div> <div class="col-lg-2">
                        @Html.DropDownList("TransactionTable", null, "Select..", new { @class = "form-control input-sm" })
                    </div>

                    <div class="col-lg-2">
                        @Html.DropDownList("TransactionMode", null,  new { @class = "form-control input-sm" })
                    </div>

                    <div class="col-lg-1">
                        <button type="submit" class="btn btn-sm btn-success">
                            <span class="glyphicon glyphicon-search"></span>
                        </button>


                    </div>
                }
            </div>

        </div>

        <table class="table table-striped table-condensed table-responsive">
            <thead>
                <tr>
                    <th>@Html.DisplayNameFor(model => model.Transactions.First().TransactionDate)</th>
                    <th>@Html.DisplayNameFor(model => model.Transactions.First().TransactionHead)</th>
                    <th>@Html.DisplayNameFor(model => model.Transactions.First().TableName)</th>
                    <th>@Html.DisplayName("Deposit")</th>
                    <th>@Html.DisplayName("Withdraw")</th>
                   
                    <th>@Html.DisplayName("Account")</th>
                    <th>@Html.DisplayName("Created By")</th>
                    <th>@Html.DisplayName("Created Date")</th>
                    
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Transactions )
                {
                   
                    var account = BankAccountController.AllAccountByMode(item.TransactionMode).FirstOrDefault(a => a.Id == item.TransactionModeId);
                    var deposite = item.TypeOfTransaction.ToLower() == "deposit" ? item.Amount.ToString("n") : " ";
                    var withdraw = item.TypeOfTransaction.ToLower() == "withdraw" ? item.Amount.ToString("n") : " ";
                    <tr>
                        <td class="col-md-1">@item.TransactionDate.ToString("dd-MM-yyyy")</td>
                        <td class="col-md-2">@item.TransactionHead</td>
                        <td class="col-md-2">@item.TableName (@item.PrimaryKeyName = @item.PrimaryKeyValue)</td>
                        <td class="col-md-1">@deposite</td>
                        <td class="col-md-1">@withdraw</td>
                      
                        <td class="col-md-2">
                            @if (account != null)
                            {@account.Name
                            }
                    </td>
                        <td class="col-md-1">
                            @Html.DisplayFor(modelItem => item.CreateUser.UserName)
                        </td>
                        <td class="col-md-2">@String.Format("{0:dd-MM-yyyy hh:mm tt}",item.CreatedDate)</td>
                       
                    </tr>
                }
            </tbody>
        </table>
        Page @(Model.Transactions.PageCount < Model.Transactions.PageNumber ? 0 : Model.Transactions.PageNumber) of @Model.Transactions.PageCount
        @Html.PagedListPager(Model.Transactions, Page => Url.Action("Index", "Transaction", new RouteValueDictionary() { { "Page", Page }, { "PageSize", Model.PageSize }, { "TransactionDateFrom", Model.TransactionDateFrom }, { "TransactionDateTo", Model.TransactionDateTo }, { "TransactionMode", Model.TransactionType }, { "TransactioType", Model.TransactionType }, { "TransactionTable", Model.TransactionTable } }))

        
    </div>
    
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
<script>
   $(document).ready(function () {

       $('#pagesizelist').change(function () {
           $('#transactionSearchForm').submit();
        });
   });
   </script>
}

@*//=======================================================================================//
    //Author : Al Monsur
    //Creation Date : January 2017
    //=======================================================================================//*@