@using PagedList.Mvc
@using WarehouseApp.Controllers

@model WarehouseApp.Models.ViewModels.PurchaseSearchViewModel

@Styles.Render("~/Content/PagedList")
@{
    ViewBag.Title = "Purchase List";
}

<div class="row">
    <div class="col-md-12 col-sm-12 col-xs-12">
        <div class="x_panel">
            <div class="x_title">
                <i class="fa fa-list"></i> Purchase List
                <ul class="nav navbar-right panel_toolbox">
                    <li><a href='@Url.Action("StockIn", "Purchase")' data-id="0" class="" title="Add New"><i class="fa fa-plus-square fa-lg"></i> </a></li>

                    <li class="dropdown">
                        <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" title="Settings" aria-expanded="false"><i class="fa fa-wrench"></i></a>
                        <ul class="dropdown-menu" role="menu">
                            <li><a href='@Url.Action("Index","Product")'>Products</a></li>
                            <li><a href='@Url.Action("Index","Batch")'>Barcodes</a></li>
                            <li><a href='@Url.Action("Index","Stock")'>Stock</a></li>
                            <li><a href='@Url.Action("Index","Supplier")'>Suppliers</a></li>
                            <li><a href='@Url.Action("Index","WarehouseZone")'>Warehouse Zones</a></li>
                           
                        </ul>
                    </li>
                    <li>
                        <a class="collapse-link" title="Collapse"><i class="fa fa-chevron-up"></i></a>
                    </li>
                </ul>
                <div class="clearfix"></div>
            </div>
            <div class="x_content">

                <div class="form-horizontal">

                    <div class="form-group">
                        @using (Html.BeginForm("Index", "Purchase", FormMethod.Post, new { @class = "", @id = "purchaseSearchForm" }))
                        {
                            <div class="col-lg-2 ">
                                @Html.Label("Page Size", new { @class = "col-lg-8 pageSizeLabel" })
                                <div class="col-lg-4">
                                    @Html.DropDownListFor(model => model.PageSize, new SelectList(new Dictionary<string, int> { { "25", 25 }, { "50", 50 }, { "100", 100 } }, "Key", "Value", null), new { @class = "pageSizeDropdown", id = "pageSizelist" })

                                </div>
                            </div>
                            <div class="col-lg-4 form-inline">
                                <div class="col-md-5 input-group " style="">
                                    @Html.TextBoxFor(model => model.PurchaseDateFrom, string.Format("{0:dd-MM-yyyy}", DateTime.Now), new { @class = "form-control input-sm rfwDatepicker", })
                                    <span class="input-group-addon rfwDatepickerIcon"><i class="glyphicon glyphicon-calendar"></i></span>
                                </div>
                                <i class="fa fa-minus fa-fw"></i>
                                <div class="col-md-5 input-group " style="">
                                    @Html.TextBoxFor(model => model.PurchaseDateTo, string.Format("{0:dd-MM-yyyy}", DateTime.Now), new { @class = "form-control input-sm rfwDatepicker", })
                                    <span class="input-group-addon rfwDatepickerIcon"><i class="glyphicon glyphicon-calendar"></i></span>
                                </div>

                            </div>
                            <div class="col-lg-2 paddingReduce">
                                @Html.TextBox("PurchaseNo", null, new { @class = "form-control input-sm", @placeholder = "Purchase Number" })
                            </div>
                            <div class="col-lg-2 paddingReduce">
                                @Html.DropDownList("SupplierId", null, "Select Suppliers..", new { @class = "form-control input-sm", })

                            </div>

                            <div class="col-lg-1 paddingReduce">
                                @Html.DropDownList("TransactionMode", new SelectList(BankAccountController.TransactionModes(), "Value", "Text"), new { @class = "form-control input-sm" })
                            </div>

                            <div class="col-lg-1 ">
                                <button type="submit" class="btn btn-sm btn-success">
                                    <span class="glyphicon glyphicon-search"></span>
                                </button>


                            </div>
                        }
                    </div>

                </div>

                <table class="table table-striped table-condensed table-responsive jambo_table">
                    <thead>
                        <tr>
                            <th>
                                @Html.DisplayNameFor(model => model.Purchases.First().PurchaseDate)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Purchases.First().PurchaseNumber)
                            </th>
                            <th>
                                @Html.DisplayName("Quantity")
                            </th>
                            @if (User.IsInRole("Global_SupAdmin") || User.IsInRole("PurchasePrice"))
                            {
                                <th>
                                    @Html.DisplayName("Total Amount")
                                </th>
                                <th>
                                    @Html.DisplayName("Paid")
                                </th>
                                <th>
                                    @Html.DisplayName("Due")
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.Purchases.First().PurchaseCost)
                                </th>
                                @*<th >
                                        @Html.DisplayName("Purchase Cost Paid")
                                    </th>
                                    <th >
                                        @Html.DisplayName("Purchase Cost Due")
                                    </th>*@
                            }
                            <th>
                                @Html.DisplayNameFor(model => model.Purchases.First().Supplier.SupplierName)
                            </th>

                            @*<th >
                                    Account
                                </th>*@
                            <th>
                                Action
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.Purchases)
                        {
                            // var account = BankAccountController.AllAccountByMode(item.TransactionMode).FirstOrDefault(a => a.Id == item.TransactionModeId);
                            double due = Convert.ToDouble(item.TotalPrice) - Convert.ToDouble(item.PaidAmount);
                            <tr>
                                <td class="col-md-1">
                                    @Html.DisplayFor(modelItem => item.PurchaseDate)
                                </td>
                                <td class="col-md-1">
                                    @Html.DisplayFor(modelItem => item.PurchaseNumber)
                                </td>
                                <td class="col-md-1">
                                    @Html.DisplayFor(modelItem => item.TotalQuantity)
                                </td>
                                @{double? pcDue = 0;}
                                @if (User.IsInRole("Global_SupAdmin") || User.IsInRole("PurchasePrice"))
                                {

                                    <td class="col-md-1">
                                        @Html.DisplayFor(modelItem => item.TotalPrice)
                                    </td>

                                    <td class="col-md-1">
                                        @Html.DisplayFor(modelItem => item.PaidAmount)
                                    </td>
                                    <td class="col-md-1">

                                        @due

                                    </td>


                                    if (item.PurchaseCosts.Count > 0)
                                    {
                                        pcDue = item.PurchaseCosts.Sum(x => x.Amount) - item.PurchaseCosts.Sum(x => x.PaidAmount);
                                        <td class="col-md-1">
                                            @item.PurchaseCosts.Sum(x => x.Amount)
                                        </td>@*<td class="col-md-1">
                                               @item.PurchaseCosts.Sum(x => x.PaidAmount)
                                            </td><td class="col-md-1">
                                               @pcDue

                                            </td>*@
                                    }
                                    else
                                    {
                                        <td class="col-md-1">
                                            0
                                        </td>@*<td class="col-md-1">
                                               0
                                            </td><td class="col-md-1">
                                              0
                                            </td>*@
                                    }

                                }

                                <td class="col-md-2">
                                    @Html.DisplayFor(modelItem => item.Supplier.SupplierName)
                                </td>


                                <td class="col-md-2">
                                    @if (item.PurchasePayments.Count == 0)
                                    {
                                        if (User.IsInRole("Global_SupAdmin") ||  User.IsInRole("Purchase_Create"))
                                          {
                                              @Html.ActionLink(" ", "EditPurchase", "Purchase", new {id = item.PurchaseId}, new {@class = "btn btn-xxs btn-primary fa fa-pencil"})
                                          }
                                        else
                                        {
                                              @Html.ActionLink(" ", "EditStockIn", "Purchase", new {id = item.PurchaseId}, new {@class = "btn btn-xxs btn-primary fa fa-pencil"})
                                            
                                        }
                                    }
                                    @Html.ActionLink(" ", "PurchaseDetails", "Purchase", new { id = item.PurchaseId }, new { @class = "btn btn-xxs btn-info fa fa-search-plus", @title = "Details" })
                                    @if (User.IsInRole("Global_SupAdmin") || User.IsInRole("Purchase_Create"))
                                    {
                                        if (due > 0 || pcDue > 0)
                                        {

                                            @Html.ActionLink("Due", "PurchaseDuePayment", "Purchase", new { id = item.PurchaseId }, new { @class = "badge" })
                                        }
                                    }
                                </td>
                            </tr>
                        }

                    </tbody>

                </table>
                Page @(Model.Purchases.PageCount < Model.Purchases.PageNumber ? 0 : Model.Purchases.PageNumber) of @Model.Purchases.PageCount
                @Html.PagedListPager(Model.Purchases, Page => Url.Action("Index", "Purchase", new RouteValueDictionary() { { "Page", Page }, { "PageSize", Model.PageSize }, { "PurchaseDateFrom", Model.PurchaseDateFrom }, { "PurchaseDateTo", Model.PurchaseDateTo }, { "TransactionMode", Model.TransactionMode }, { "SupplierId", Model.SupplierId } }))

            </div>

        </div>
    </div>
    <div class="modal" id="duePaymentModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel">
        <div class="modal-dialog modal-md" role="document">

            <div class="modal-content">
                @using (Html.BeginForm("PurchaseDuePayment", "Purchase", null, FormMethod.Get, new { @id = "purchaseDueForm" }))
                        {
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                            <h3 class="panel-title"><i class="fa fa-pencil"></i> Purchase Due Payment</h3>
                        </div>
                        <div class="modal-body">
                            <div class="col-xs-12 col-sm-12 col-md-12">
                                <div class="form-horizontal">
                                    @Html.ValidationSummary(true)
                                    @Html.Hidden("PurchaseId")

                                    <div class="form-group">
                                        <strong id="PurSupplier">

                                        </strong>
                                    </div>
                                    <div class="form-group">
                                        @Html.Label("Purchase Date", new { @class = "col-md-4 paddingReduce" })

                                        <div class="col-md-6 input-group paddingReduce" style="">
                                            @Html.TextBox("DuePaymentDate", string.Format("{0:dd-MM-yyyy}", DateTime.Now), new { @class = "form-control input-sm rfwDatepicker", })
                                            <span class="input-group-addon rfwDatepickerIcon"><i class="glyphicon glyphicon-calendar"></i></span>
                                        </div>

                                    </div>
                                    <div class="form-group">
                                        @Html.Label("Total", new { @class = "col-md-4 paddingReduce" })
                                        <div class="col-md-6 paddingReduce">
                                            @Html.TextBox("PurTotal", null, new { @class = "form-control input-sm", @readonly = true })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.Label("Paid", new { @class = "col-md-4 paddingReduce" })
                                        <div class="col-md-6 paddingReduce">
                                            @Html.TextBox("PurPaid", null, new { @class = "form-control input-sm", @readonly = true })
                                        </div>
                                    </div>


                                    <div class="form-group">
                                        @Html.DropDownList("DueTransactionMode", null, new { @class = "form-control input-sm" })
                                    </div><div class="form-group">
                                        @Html.DropDownList("TransactionModeId", null, new { @class = "form-control input-sm" })

                                    </div>
                                    <div class="form-group">
                                        @Html.TextBox("PaidAmount", null, new { @class = "form-control input-sm", @Placeholder = "Due Payment Amount" })
                                    </div>
                                    <div class="form-group">
                                        @Html.Label("Due", new { @class = "col-md-4 paddingReduce" })
                                        <div class="col-md-6 paddingReduce">
                                            @Html.TextBox("PurDue", null, new { @class = "form-control input-sm", @readonly = true })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button id="Submit" class="btn btn-primary"> Update</button>
                            <button data-dismiss="modal" class="btn btn-default">Cancel</button>

                        </div>
                        }
            </div>
        </div>
    </div>
</div>
            @section Scripts {
                @Scripts.Render("~/bundles/jqueryval")
                @Scripts.Render("~/bundles/ShopScript")
                <script>
                    $(document).ready(function () {
                        $('.duePaymentModal').click(function () {
                            var rowId = $(this).data('id');
                            $('#duePaymentModal').modal('show');

                            var paramData = { id: rowId };
                            var url = '@Url.Action("GetPurchaseById", "Purchase")';
                            getDataShop(url, paramData, 'duePaymmentModal');
                        });
                        $('#DueTransactionMode').change(function () {

                            $('#TransactionModeId').empty();
                            var value = $(this).val();

                            var paramData = { TransactionMode: value };

                            var url = '@Url.Action("GetAccountByMode", "BankAccount")';
                            getDataShop(url, paramData, 'getAccountNo');
                        });

                        $('#pageSizelist').change(function () {
                            $('#purchaseSearchForm').submit();
                        });
                    });

                    function removeThis(obj, paramData) {
                        var url = '@Url.Action("DeleteRecord", "purchase")';
                        deleteRow(obj, url, paramData);
                    }
                </script>
            }
            @*//=======================================================================================//
                //Author : Md. Mahid Choudhury
                //Creation Date : January 2017
                //=======================================================================================//*@
