@model IEnumerable<EBSM.Entities.ExpenseType>
@using EBSM.Entities;
@{
    ViewBag.Title = "Expense Types";
    //var cx = new WmsDbContext();
}



<div class="row">
    <div class="col-md-12 col-sm-12 col-xs-12">
        <div class="x_panel">
            <div class="x_title">
                <i class="fa fa-list"></i> Expense Type List
                <ul class="nav navbar-right panel_toolbox">
                    @*<li><a href='@Url.Action("CreateExpense", "Expense")' data-id="0" class="" title="Add New"><i class="fa fa-plus"></i> </a></li>*@
                    <li><a href="javascript:void(0);" id="newExpense" class="pull-right"><span class="btn btn-xs btn-info"><i class="fa fa-plus-circle fa-lg"></i>&nbsp;&nbsp;Add New</span></a></li>

                    <li class="dropdown">
                        <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" title="Settings" aria-expanded="false"><i class="fa fa-wrench"></i></a>
                        <ul class="dropdown-menu" role="menu">
                            <li><a href='@Url.Action("ExpenseTypeList", "Expense")'>Expense Head</a></li>
                        </ul>
                    </li>
                    <li>
                        <a class="collapse-link" title="Collapse"><i class="fa fa-chevron-up"></i></a>
                    </li>
                </ul>
                <div class="clearfix"></div>
            </div>
            <div class="x_content">

                <p id="addExpense"></p>
                <table class="table table-condensed table-responsive jambo_table" id="expenseHeadDataTable">

                    <thead>
                        <tr>
                            <th></th>
                            <th>
                                @Html.DisplayNameFor(model => model.TypeName)
                            </th>

                            <th>Action</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.Where(e => !e.ParentId.HasValue))
                        {
                            <tr>
                                <td class="cx"><span class="glyphicon" onclick=" subRow(this); "><i class="fa fa-caret-square-o-down"></i></span></td>
                                <td class="expType @(@item.Status==0 ? "text-solid-red" : " ")">
                                    @Html.DisplayFor(modelItem => item.TypeName)
                                    @Html.Hidden("parent_" + item.ExpenseTypeId, null, new { @class = "expenseTypeId", @Value = item.ExpenseTypeId })
                                </td>

                                <td>
                                    <a href="javascript:void(0);" data-id="@item.ExpenseTypeId" class="editType"><span class="btn btn-xs btn-default fa fa-pencil fa-lg" title="Edit"></span></a>
                                    @if (item.Status == 0)
                                    {
                                        <a href="javascript:void(0);" onclick="statusUpdate(@item.ExpenseTypeId, 'active')" data-id="@item.ExpenseTypeId"><span class="btn btn-xs btn-default">Active</span></a>
                                    }
                                    else
                                    {
                                        <a href="javascript:void(0);" onclick="statusUpdate(@item.ExpenseTypeId, 'inactive')" data-id="@item.ExpenseTypeId"><span class="btn btn-xs btn-danger">Inactive</span></a>
                                    }

                                </td>
                                <td><a href="javascript:void(0);" data-id="@item.ExpenseTypeId" class="newChild"><span class="btn btn-primary btn-sm glyphicon glyphicon-plus" title="Add New Child"></span> </a></td>

                            </tr>
                            <tr>
                                <td></td>

                                <td colspan="3">
                                    <table class="table table-responsive tableData" id="childTable">
                                        @foreach (var i in Model.Where(e => e.ParentId == item.ExpenseTypeId))
                                        {
                                            <tr>
                                                <td class="expType  @(@i.Status==0 ? "text-solid-red" : " ")">@Html.DisplayFor(modelItem => i.TypeName)</td>
                                                <td>
                                                    <a href="javascript:void(0);" data-id="@i.ExpenseTypeId" class="editType"><span class="btn btn-xs btn-default fa fa-pencil fa-lg" title="Edit"></span></a>
                                                    @if (i.Status == 0)
                                                    {
                                                        <a href="javascript:void(0);" onclick="statusUpdate(@i.ExpenseTypeId,'active')"><span class="btn btn-xs btn-default">Active</span></a>
                                                    }
                                                    else
                                                    {
                                                        <a href="javascript:void(0);" onclick="statusUpdate(@i.ExpenseTypeId,'inactive')"><span class="btn btn-xs btn-danger">Inactive</span></a>
                                                    }
                                                </td>
                                                <td></td>
                                            </tr>
                                        }
                                        <tr class="childRow_@item.ExpenseTypeId"></tr>
                                    </table>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/ProjectJs/Shop/ShopScript.js"></script>
    <script>
                    function statusUpdate(id, val) {
                        var url = '@Url.Action("UpdateExpenseTypeStatus", "Expense")';
                        var paramData = { id: id, tag: val };
                        postShopData(url, paramData, "updateStatus", this);

                    }
                    $(document).ready(function () {

                        $('.editType').click(function () {
                            var rowId = $(this).data('id');
                            var expType = $(this).parent('td').siblings('.expType').text().trim();
                            var row = $(this).closest('tr');
                            row.toggleClass('isediting'); // add a style to highlight the row
                            var isediting = row.hasClass('isediting');
                            //var span = $(this).parent('td').siblings('.expType');
                            $(this).parent('td').siblings('.expType').prop('contenteditable', isediting).addClass('form-control input-sm');
                            if (isediting) {
                                $(this).html('<span class="btn btn-xs btn-primary fa fa-floppy-o fa-lg" title="Update"></span>');
                            } else {
                                if (expType != '') {
                                    var url = '@Url.Action("UpdateExpenseType", "Expense")';
                                    var paramData = { id: rowId, name: expType };
                                    postShopData(url, paramData);
                                    $(this).parent('td').siblings('.expType').removeClass('form-control input-sm');
                                    $(this).html('<span class="btn btn-xs btn-default fa fa-pencil fa-lg" title="Edit"></span>');
                                } else {
                                    $.alert("Please Enter Expense Type.", '<i class="fa fa-exclamation-circle" aria-hidden="true"> Alert</i>');
                                    row = $(this).closest('tr');
                                    row.toggleClass('isediting');
                                    isediting = row.hasClass('isediting');
                                    $(this).parent('td').siblings('.expType').prop('contenteditable', isediting);
                                }
                            }
                        });



                        $(".newChild").click(function () {
                            var id = $(this).data('id');
                            var parentId = $(this).parent('td').parent('tr').find('.expenseTypeId').val();
                            var childRow = $(this).parent('td').parent('tr').parent('tbody').find('tr.childRow_' + id);
                            var newInputFields =
                                '<td><div class="col-md-6"><input type="text" class="form-control input-sm childType" placeholder="Expense Name"/><input type="hidden" class="parentId" value="' + parentId + '"/></div><input type="button" value="Save" class="btn btn-sm btn-primary" onclick="addChild(this)" /><input type="button" value="Cancel" class="btn btn-sm btn-default" onclick="cancelChild(this)" /></td><td></td> ';
                            childRow.html(newInputFields);
                        });
                        $("#newExpense").click(function () {

                            var addExpense = $("#addExpense");
                            var newExpenseFields =
                                '<div id="expenseFields"><span><input type="text" id="expenseTypeFld" class="form-control input-sm" placeholder="Expense Type"/></span><span><input type="button" value="Save" class="btn btn-sm btn-primary" onclick="addExpenseType(this)" /></span><span><input type="button" value="Cancel" class="btn btn-sm btn-default" onclick="cancelExpenseType()" /></span></div>';
                            addExpense.html(newExpenseFields);

                        });


                    });


                    function addChild(obj) {

                        var childType = $(obj).parent('td').parent('tr').find('.childType').val().trim();
                        var parentId = $(obj).parent('td').parent('tr').find('.parentId').val();
                        if (childType != '') {
                            var paramData = { TypeName: childType, ParentId: parentId };
                            var url = '@Url.Action("CreateExpenseName", "Expense")';
                            postShopData(url, paramData, 'renderExpenseNameAdd', obj);
                        } else {
                            $.alert("Please enter expense Name",
                                '<i class="fa fa-exclamation-circle" aria-hidden="true"> Alert</i>');
                        }
                    }

                    function cancelChild(obj) {
                        $(obj).parent('td').parent('tr').html('');
                    }

                    function addExpenseType(obj) {
                        var childType = $('#expenseTypeFld').val().trim();
                        if (childType != '') {
                            var paramData = { TypeName: childType };
                            var url = '@Url.Action("AjaxCreateExpenseType", "Expense")';
                            postShopData(url, paramData, 'renderExpenseTypeAdd', obj);
                        } else {
                            $.alert("Please enter expense type",
                                '<i class="fa fa-exclamation-circle" aria-hidden="true"> Alert</i>');
                        }
                    }

                    function cancelExpenseType() {
                        $("#addExpense").html('');
                    }
    </script>
}
@*//=======================================================================================//
    //Author : Al Monsur
    //Creation Date : January 2017
    //=======================================================================================//*@
